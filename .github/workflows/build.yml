name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud-analysis:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use default GitHub token

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache Backend Dependencies
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}

      - name: Install & Test Backend
        working-directory: backend
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
        run: |
          npm ci
          npm test -- --coverage  # Explicit coverage generation

      - name: Verify Coverage Report
        run: |
          [ -f backend/coverage/lcov.info ] || (echo "Backend coverage missing" && exit 1)

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4.1.0
        with:
          args: >
            -Dsonar.organization=mohamed-redouane
            -Dsonar.projectKey=Mohamed-Redouane_action
            -Dsonar.sources=backend,frontend
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/coverage/**
            -Dsonar.javascript.lcov.reportPaths=backend/coverage/lcov.info
            -Dsonar.coverage.exclusions=**/test/**,**/mock**
            -Dsonar.qualitygate.wait=true
            -Dsonar.branch.name=${{ github.ref_name }}
            ${{ github.ref_name != 'main' && '-Dsonar.branch.target=main' || '' }}
            ${{ github.event_name == 'pull_request' && '-Dsonar.pullrequest.base=main' || '' }}