name: Automated Testing Pipeline

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Step 3: Cache Node.js dependencies
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 4: Install dependencies
      - name: Install Dependencies
        run: npm install

      # Step 5: Run Jest tests with coverage
      - name: Run Jest Tests
        run: npm test -- --coverage
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PORT: ${{ secrets.PORT }}

      # Step 6: Upload Jest coverage report
      - name: Upload Jest Coverage
        uses: actions/upload-artifact@v3
        with:
          name: jest-coverage
          path: coverage/

      # Step 7: Run Cypress tests
      - name: Run Cypress Tests
        uses: cypress-io/github-action@v5
        with:
          browser: chrome
          headless: true

      # Step 8: Upload Cypress artifacts
      - name: Upload Cypress Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cypress-results
          path: |
            cypress/screenshots
            cypress/videos
